"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[624],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(96540);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}},49998:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"reference/fundamentals/test-document","title":"Test Document","description":"Test documents are the files that contain the instructions of what ought to be tested and how to test it. They are the main entry point for working with scrut from the command line. All test documents contain zero or more test cases.","source":"@site/docs/reference/fundamentals/test-document.md","sourceDirName":"reference/fundamentals","slug":"/reference/fundamentals/test-document","permalink":"/scrut/docs/reference/fundamentals/test-document","draft":false,"unlisted":false,"editUrl":"https://www.internalfb.com/code/fbsource/fbcode/clifoundation/scrut/website/docs/reference/fundamentals/test-document.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Test Case","permalink":"/scrut/docs/reference/fundamentals/test-case"},"next":{"title":"Test Output","permalink":"/scrut/docs/reference/fundamentals/test-output"}}');var r=n(74848),o=n(28453);const i={},c="Test Document",a={},d=[{value:"Document Formats",id:"document-formats",level:2},{value:"Document Writing Recommendations",id:"document-writing-recommendations",level:2},{value:"File Structure Recommendation",id:"file-structure-recommendation",level:2}];function m(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"test-document",children:"Test Document"})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.em,{children:"Test documents"})," are the files that contain the instructions of ",(0,r.jsx)(t.em,{children:"what"})," ought to be tested and ",(0,r.jsx)(t.em,{children:"how"})," to test it. They are the main entry point for working with ",(0,r.jsx)(t.code,{children:"scrut"})," from the command line. All test documents contain zero or more ",(0,r.jsx)(t.a,{href:"/docs/reference/fundamentals/test-case/",children:"test cases"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"document-formats",children:"Document Formats"}),"\n",(0,r.jsx)(t.p,{children:"Scrut supports two formats for test documents:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/docs/reference/formats/markdown-format/",children:"Markdown"}),", the default and recommended format for writing test documents."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"/docs/reference/formats/markdown-format/",children:"Cram"}),", supported for legacy reasons to run or migrate tests written for the now ",(0,r.jsx)(t.a,{href:"https://github.com/aiiie/cram",children:"deprecated Cram framework"})]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"document-writing-recommendations",children:"Document Writing Recommendations"}),"\n",(0,r.jsx)(t.p,{children:"Consider test documents not only as stashes for test cases, but also as documentation for the tested functionality. Maintaining CLIs, as any software, long term is a challenge. Using the Markdown format Scrut provides an opportunity to store knowledge about systems (i.e. behavior of the CLI) together with validation of that knowledge (the test cases)."}),"\n",(0,r.jsx)(t.h2,{id:"file-structure-recommendation",children:"File Structure Recommendation"}),"\n",(0,r.jsx)(t.p,{children:"There are two common patterns to structure test documents in Scrut:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Coherent Test Suite"})," (recommended): One test file represents one use-case or behavior. This makes it easy to identify broken functionality."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"List of Tests"}),": One test file contains a list of simple, not necessarily related tests. This makes it easy to cover a lot of functionality quickly, but at the price of harder maintainability down the line."]}),"\n"]})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);